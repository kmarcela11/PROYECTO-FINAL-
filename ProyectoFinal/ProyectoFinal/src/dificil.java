
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author valec
 */
public class dificil extends javax.swing.JFrame {

    /**
     * Creates new form dificil
     */
    public dificil() {
        initComponents();
    }

   public static int n, m,nn,mm, ancho, alto,bloq,inin,fina, posicioninicial, posicionfinal, x, y, dx, dy, xr, yr, xfr, yfr;
    public static int mt[][] = new int[100][100];

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Tablero = new javax.swing.JPanel();
        pintarr = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 0));

        Tablero.setPreferredSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout TableroLayout = new javax.swing.GroupLayout(Tablero);
        Tablero.setLayout(TableroLayout);
        TableroLayout.setHorizontalGroup(
            TableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        TableroLayout.setVerticalGroup(
            TableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        pintarr.setText("pintar");
        pintarr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pintarrActionPerformed(evt);
            }
        });
        pintarr.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pintarrKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Tablero, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pintarr)
                        .addGap(219, 219, 219)))
                .addGap(153, 153, 153))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(pintarr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(Tablero, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pintarrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pintarrActionPerformed
        // TODO add your handling code here:
         Graphics t = Tablero.getGraphics();
    Image img = new ImageIcon(getClass().getResource("/pfmedia/x.png")).getImage();
    
                nn = inicio.n; //trae la fila
                mm = inicio.m; //trae la columna
                
                if ((nn >= 8 && nn <= 100) && (mm >= 16 && mm <= 100)) { /*validación de tamaño máx y min de matriz*/
                
                ancho = 800 / mm;/* ancho casillas*/
                alto = 500 / nn;/* alto casillas*/
                
                Random r = new Random();
                
                xr = r.nextInt(nn); // Posición aleatoria de fila inicial.
                yr = r.nextInt(mm); // Posición aleatoria de columnas inicial.
                
                xfr = r.nextInt(nn); // Posición aleatoria de fila final.
                yfr = r.nextInt(mm); // Posición aleatoria de columnas final.
                
                while (xr == xfr && yfr == yr) { // en caso de que pos inicial y pos final sean iguales, se usa random otra vez
                    xfr = r.nextInt(nn); // Posición aleatoria de fila final.
                    yfr = r.nextInt(mm); // Posición aleatoria de columnas final.
                }
                
                for (int i = 0; i < nn; i++) {
                    for (int j = 0; j < mm; j++) {
                        
                        mt[i][j] = r.nextInt(2) + 1; // Genera el número aleatorio de 0 a 4 (en este caso, el límite varía según la dificultad).
                        
                        if (mt[i][j] == 1) {
                            t.setColor(Color.black); //Si se bloquea     
                        } else {
                            t.setColor(Color.white); // Ta libre :p
                        }
                        
                        if (i == xr && j == yr) {
                            mt[i][j] = 5;
                            inin = 5; 
                        }
                        
                        if ((i == xfr && j == yfr)&& !(mt[i][j] == 1)) {
                            mt[i][j] = 6;
                            fina = 6;
                        }
                        
                        if (!(i == xr && j == yr) && !(i == xfr && j == yfr)){
                             t.fillRect(ancho * j, alto * i, ancho, alto); //Se va moviendo por el código pintando cuadrito x cuadrito.
                        }
                        
                        t.setColor(Color.black);
                        t.drawLine(0, i * alto, mm * ancho, i * alto);
                        t.setColor(Color.black);
                        t.drawLine(j * ancho, 0, j * ancho, nn * alto);

                    }
                }
               
                if (inin == 5){
                    img = new ImageIcon(getClass().getResource("/pfmedia/x.png")).getImage();
                    t.drawImage(img, ancho * yr, alto * xr, ancho, alto, Tablero);//posicion inicial
                }
                
                if (fina ==6){
                    img = new ImageIcon(getClass().getResource("/pfmedia/o.png")).getImage();
                    t.drawImage(img, ancho * yfr, alto * xfr, ancho, alto, Tablero); // posicion final
                }  
                
            } else {                
                JOptionPane.showMessageDialog(null, "el número de filas debe ser mayor o igual a 8 y menor o igual a 100. \n"
                        + "el número de columnas debe ser mayor o igual a 16 y menor o igual a 100");               
            }
    }//GEN-LAST:event_pintarrActionPerformed

    private void pintarrKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pintarrKeyPressed
        // TODO add your handling code here:
         Graphics t = Tablero.getGraphics();
        
        if (evt.getKeyCode()==37){ //izquierda
            if(mt[xr][yr-1]!=1 && yr>0){
                yr=yr-1;
                t.setColor(Color.green);
                t.fillRect(ancho * yr, alto * xr, ancho, alto);
                if (xr==xfr && yr==yfr){
                     JOptionPane.showMessageDialog(null, "Ganaste wuu");
                }
            }    
        }
        
        if (evt.getKeyCode()==38){ //arriba
            
            if(mt[xr-1][yr]!=1 && xr>0){
                xr=xr-1;
                t.setColor(Color.green);
                t.fillRect(ancho * yr, alto * xr, ancho, alto);
                
                 if (xr==xfr && yr==yfr){
                     JOptionPane.showMessageDialog(null, "Ganaste wuu");
                }
            }
        }
        
        if (evt.getKeyCode()==39){ // derecha           
            if(mt[xr][yr+1]!=1 && yr<mm){
                yr=yr+1;
                t.setColor(Color.green);
                t.fillRect(ancho * yr, alto * xr, ancho, alto);                
                 if (xr==xfr && yr==yfr){
                     JOptionPane.showMessageDialog(null, "Ganaste wuu");
                }
            }
        }
        
        if (evt.getKeyCode()==40){ //izquierda
            if(mt[xr+1][yr]!=1 && xr<nn){
                xr=xr+1;
                t.setColor(Color.green);
                t.fillRect(ancho * yr, alto * xr, ancho, alto);
                 if (xr==xfr && yr==yfr){
                     JOptionPane.showMessageDialog(null, "Ganaste wuu");
                }
            }
        }
    }//GEN-LAST:event_pintarrKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dificil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dificil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dificil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dificil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dificil().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Tablero;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton pintarr;
    // End of variables declaration//GEN-END:variables
}
